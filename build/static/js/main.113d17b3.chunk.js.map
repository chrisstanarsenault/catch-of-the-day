{"version":3,"sources":["helpers.js","components/StorePicker.js","base.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","transitionappear","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","console","log","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","EditFishForm_EditFishForm","AddFishForm_AddFishForm","loadSampleFishes","components_Login","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","storeid","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","Fish_Fish","Order_Order","Inventory_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.113d17b3.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n// import { format } from 'path';\nimport { getFunName } from \"../helpers\";\n\nexport default class StorePicker extends Component {\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  myInput = React.createRef();\n  goToStore = (event) => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from the input\n    const storeName = this.myInput.current.value;\n    // 3. change the page to /store/whatever input is\n    this.props.history.push(`/store/${storeName}`)\n  }\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    )\n  }\n}\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyA07YtgnLm4c3F91VeE1rrpyWM4K3AeYZk\",\n  authDomain: \"catch-of-the-day-d0499.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-d0499.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nexport default class Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames:\"order\",\n      key,\n      timeout:{ enter: 500, exit: 500 },\n      transitionappear: \"true\",\n    }\n\n    // make sure the fish is loaded before we continue\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            <span>\n              <TransitionGroup component=\"span\" className=\"count\">\n                <CSSTransition\n                  classNames=\"count\"\n                  key={count}\n                  timeout={{ enter: 5000, exit: 5000 }}\n                >\n                  <span>{count}</span>\n                </CSSTransition>\n              </TransitionGroup>\n               lbs {fish.name} {formatPrice(count * fish.price)}\n              <button onClick={() => this.props.removeFromOrder(key)}>\n                &times;\n              </button>\n            </span>\n          </li>\n        </CSSTransition>\n      );\n\n\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">{orderIds.map(key => this.renderOrder(key))}</TransitionGroup>\n\n        <div className=\"total\">\n          Total: <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default class AddFishForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    e.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n\n  handleChange = event => {\n    // update that fish\n    // 1. Take a copy of the fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  }\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n        <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n        <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n        <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With GitHub</button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log In With Twitter</button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In With Facebook</button>\n  </nav>\n)\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n  }\n\nexport default Login;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport base, { firebaseApp } from \"../base\";\nimport firebase from 'firebase';\n\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\n\nexport default class Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSamples: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({user});\n      }\n    })\n  }\n\n  authHandler = async authData => {\n    // 1. Look up the current store in firebase database\n    const store = await base.fetch(this.props.storeId, {context: this});\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n    console.log(authData)\n    console.log(store);\n  }\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  }\n\n  logout = async () => {\n    console.log(\"Logging out\");\n    await firebase.auth().signOut();\n    this.setState({uid: null})\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Logout</button>\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate}></Login>;\n    }\n\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n        {logout}\n          <p>Sorry, you are not the owner!</p>\n        </div>\n      )\n    }\n\n    // 3. They must be the owner, so just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { formatPrice } from \"../helpers\";\nimport PropTypes from \"prop-types\";\n\nexport default class Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }\n\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  }\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport base from '../base';\n\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport Fish from \"./Fish\";\n\nimport sampleFishes from '../sample-fishes';\n\nexport default class App extends Component {\n  state = {\n    fishes: {},\n    order: {}\n  }\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localstorage\n    const localStorageRef = localStorage.getItem(params.storeid);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef)})\n    }\n    this.ref = base.syncState(`${params.storeid}/fishes`, {\n      context: this,\n      state: 'fishes'\n    });\n  }\n\n  componentDidUpdate() {\n    // const { params } = this.props.match;\n    localStorage.setItem(this.props.match.params.storeid, JSON.stringify(this.state.order))\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref)\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = {...this.state.fishes}\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({\n      fishes: fishes\n    })\n  }\n\n  updateFish = (key, updatedFish) => {\n    const fishes = {...this.state.fishes};\n    fishes[key] = updatedFish;\n    this.setState({ fishes });\n  }\n\n  deleteFish = key => {\n    const fishes = {...this.state.fishes};\n    fishes[key] = null;\n    this.setState({fishes});\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes })\n  }\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = {...this.state.order};\n    // 2. either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. call setState to update our state object\n    this.setState({order});\n  }\n\n  removeFromOrder = key => {\n    const order = {...this.state.order};\n    delete order[key];\n    this.setState({order});\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul>\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n          />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeid}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Store Not Found</h2>\n  </div>\n);\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}/>\n      <Route path=\"/store/:storeid\" component={App}></Route>\n      <Route component={NotFound}></Route>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\n\nimport \"./css/style.css\";\n\nimport Router from './components/Router';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}